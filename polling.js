// Generated by CoffeeScript 1.9.3
var $, EndpointRegistry, PollingEndpoint;

$ = jQuery;

PollingEndpoint = (function() {
  function PollingEndpoint(settings) {
    var defaults;
    defaults = {
      url: '',
      interval: 5000,
      intervalMultiplier: 1.07,
      maxErrorCount: 15
    };
    this.settings = $.extend({}, defaults, settings);
    this.interval = this.settings.interval;
    this.errorCount = 0;
    this.callbacks = {};
    this.stopped = false;
  }

  PollingEndpoint.prototype.scheduleNextPoll = function() {
    return setTimeout((function(_this) {
      return function() {
        _this.poll();
        if (!_this.stopped) {
          _this.interval = Math.floor(_this.interval * _this.settings.intervalMultiplier);
          return _this.scheduleNextPoll();
        }
      };
    })(this), this.interval);
  };

  PollingEndpoint.prototype.poll = function() {
    if (this.stopped) {
      return;
    }
    return jQuery.ajax({
      url: this.settings.url,
      success: (function(_this) {
        return function(data) {
          var _, callback, ref;
          ref = _this.callbacks;
          for (_ in ref) {
            callback = ref[_];
            callback(data);
          }
        };
      })(this),
      error: (function(_this) {
        return function(data) {
          if (data.status === '403') {
            _this.stopped = true;
          } else if (data.status === '404') {
            _this.stopped = true;
          } else if (_this.errorCount >= _this.settings.maxErrorCount) {
            _this.stopped = true;
          } else {
            _this.errorCount += 1;
          }
        };
      })(this)
    });
  };

  PollingEndpoint.prototype.addCallback = function(key, callback) {
    this.callbacks[key] = callback;
    return this;
  };

  return PollingEndpoint;

})();

EndpointRegistry = (function() {
  function EndpointRegistry() {
    this.registry = {};
  }

  EndpointRegistry.prototype.registerUrl = function(url, key, callback) {
    if (!this.registry[url]) {
      this.registry[url] = new PollingEndpoint({
        url: url
      });
    }
    return this.registry[url].addCallback(key, callback);
  };

  EndpointRegistry.prototype.start = function() {
    var endpoint, ref, url;
    ref = this.registry;
    for (url in ref) {
      endpoint = ref[url];
      endpoint.scheduleNextPoll();
    }
  };

  return EndpointRegistry;

})();

Drupal.behaviors.polling = {
  registry: new EndpointRegistry(),
  attach: function(context, settings) {
    var defaults, start;
    if ($('html', context).length) {
      defaults = {
        initialTimeout: 500
      };
      settings = $.extend({}, defaults, settings.polling);
      start = (function(_this) {
        return function() {
          return _this.registry.start();
        };
      })(this);
      return setTimeout(start, settings.initialTimeout);
    }
  }
};
